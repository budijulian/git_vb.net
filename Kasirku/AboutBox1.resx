<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>